{"pageProps":{"totalNotes":[{"title":"graphql apollosdfkajsdfksfdkjsf","slug":"graphql-apollosdfkajsdfksfdkjsf","tags":[{"name":"apollo","slug":"apollo"},{"name":"dev","slug":"dev"},{"name":"coding","slug":"coding"}],"content":"\n## 아폴로 클라이언트에 대해서 알아보자\n\n아폴로 클라이언트는 무엇일까요?\n\n정말 궁금하다 !!\n\n```ts\nimport type { GetStaticProps } from 'next'\nimport { serialize } from 'next-mdx-remote/serialize'\nimport useSaveTotalNotes from '../hooks/useSaveTotalNotes'\nimport getTotalNotes from '../lib/getTotalNotes'\nimport { INote } from '../types/types'\nimport fs from 'fs'\nimport path from 'path'\nimport { NOTES_DIR } from '../constants/notebook.constants'\nimport matter from 'gray-matter'\nimport { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote'\nimport MDX from '../components/MDX'\ninterface HomeProps {\n  totalNotes: INote[]\n  metaData: { [key: string]: string }\n  source: MDXRemoteSerializeResult<Record<string, unknown>>\n}\nexport const getStaticProps: GetStaticProps = async () => {\n  const notes = fs.readdirSync(path.join(process.cwd(), NOTES_DIR))\n  const markdown = fs.readFileSync(\n    path.join(process.cwd(), NOTES_DIR, notes[notes.length - 1]),\n    'utf-8',\n  )\n  const { data: metaData, content } = matter(markdown)\n  const source = await serialize(content)\n  return {\n    props: {\n      totalNotes: getTotalNotes(),\n      source,\n      metaData,\n    },\n  }\n}\nconst Home = ({ totalNotes, source, metaData }: HomeProps) => {\n  useSaveTotalNotes(totalNotes)\n  return <MDX source={source} />\n}\n\nexport default Home\n```\n","notebook":"Apollo","createdAt":"Invalid Date"},{"title":"next","slug":"next","tags":[{"name":"coding","slug":"coding"},{"name":"next js","slug":"next-js"}],"content":"\n# Hello Next.js\n\n## 넥스트란 무엇일까?\n\n오늘은 Next.js 에 대해서 알아볼게요!\n\n```\nfunction NextApp() {\n  return <div>Hello World</div>\n}\n```\n\ndivd\n\n<br />\n\ndivd\n\n<br />\n\ndivd\n\n<br />\n\ndivd\n\n<br />\n","notebook":"Next js","createdAt":"Invalid Date"},{"title":"react","slug":"react","tags":[{"name":"react","slug":"react"},{"name":"dev","slug":"dev"},{"name":"coding","slug":"coding"}],"content":"\n# Hello React.js\n\n## 리액트란 무엇일까?\n\n오늘은 리액트 js 에 대해서 알아볼게요!\n\n```\n\n```\n","notebook":"React js","createdAt":"Invalid Date"}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Hello React.js\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"리액트란 무엇일까?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"오늘은 리액트 js 에 대해서 알아볼게요!\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"metaData":{"title":"hello React.js","notebook":"React js","tags":["react","dev","coding"],"createdAt":"2022-08-18"}},"__N_SSG":true}